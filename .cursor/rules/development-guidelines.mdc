---
description: 
globs: 
alwaysApply: false
---
# 開発ガイドライン

## 言語設定
- **すべてのコミュニケーションは日本語で行う**
- コメント、変数名、関数名は英語でも可（一般的な慣例に従う）
- UIテキストは日本語と英語の両方に対応

## パッケージ管理
- **必ずyarnを使用する（npm使用禁止）**
- 新しい依存関係を追加する際は `yarn add` を使用
- 開発依存関係は `yarn add -D` で追加

## コーディング規約

### TypeScript
- 型安全性を最優先する
- `any`型の使用は避ける
- インターフェースよりもtypeエイリアスを優先
- Zodスキーマでランタイム型検証を実装

### React/Next.js
- 関数コンポーネントのみ使用
- Server Componentsを適切に活用
- カスタムフックで状態ロジックを分離
- コンポーネントは単一責任の原則に従う

### スタイリング
- Tailwind CSSクラスを使用
- カスタムCSSは最小限に抑える
- レスポンシブデザインを考慮

## ファイル命名規約
- コンポーネント: PascalCase (例: `ChatMessage.tsx`)
- ページ: kebab-case (例: `chat-room.tsx`)
- ユーティリティ: camelCase (例: `formatMessage.ts`)
- 定数ファイル: UPPER_SNAKE_CASE (例: `API_CONSTANTS.ts`)

## エラーハンドリング
- try-catch文を適切に使用
- ユーザーフレンドリーなエラーメッセージを表示
- 開発環境では詳細なエラー情報をログ出力

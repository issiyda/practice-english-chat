-- Remove suggestions table and update bookmarks to reference chat messages directly
-- This migration:
-- 1. Drops the suggestions table (cascading to bookmarks)
-- 2. Recreates bookmarks table to reference chat_messages directly

-- First, drop the bookmarks table (since it references suggestions)
DROP TABLE IF EXISTS public.bookmarks CASCADE;

-- Drop the suggestions table
DROP TABLE IF EXISTS public.suggestions CASCADE;

-- Recreate bookmarks table with chat_message_id instead of suggestion_id
CREATE TABLE public.bookmarks (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    chat_message_id BIGINT NOT NULL REFERENCES public.chat_messages(id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT bookmarks_user_message_unique UNIQUE (user_id, chat_message_id)
);

-- Add comments
COMMENT ON TABLE public.bookmarks IS 'Stores user bookmarks of chat messages.';
COMMENT ON COLUMN public.bookmarks.id IS 'Unique identifier for the bookmark.';
COMMENT ON COLUMN public.bookmarks.user_id IS 'ID of the user who created the bookmark.';
COMMENT ON COLUMN public.bookmarks.chat_message_id IS 'ID of the bookmarked chat message.';
COMMENT ON COLUMN public.bookmarks.created_at IS 'Timestamp of when the bookmark was created.';
COMMENT ON COLUMN public.bookmarks.updated_at IS 'Timestamp of the last update to the bookmark.';
COMMENT ON CONSTRAINT bookmarks_user_message_unique ON public.bookmarks IS 'A user cannot bookmark the same chat message multiple times.';

-- Enable Row Level Security
ALTER TABLE public.bookmarks ENABLE ROW LEVEL SECURITY;

-- Create RLS policies
CREATE POLICY "Users can manage their own bookmarks." ON public.bookmarks
    FOR ALL USING (auth.uid() = user_id)
    WITH CHECK (auth.uid() = user_id);

-- Add trigger for updated_at
CREATE TRIGGER on_bookmarks_updated
    BEFORE UPDATE ON public.bookmarks
    FOR EACH ROW
    EXECUTE FUNCTION public.handle_updated_at(); 